{"version":3,"file":"static/js/160.26e91c34.chunk.js","mappings":"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","sources":["webpack://task-pro/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginSection\":\"RegisterForm_loginSection__-iytx\",\"loginLink\":\"RegisterForm_loginLink__DuX-B\",\"registerLink\":\"RegisterForm_registerLink__qhaoL\"};","import React from 'react';\nimport { Box, Button } from '@mui/material';\nimport css from './RegisterForm.module.css';\nimport { Link } from 'react-router-dom';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport IconButton from '@mui/material/IconButton';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { outlinedInputClasses } from '@mui/material/OutlinedInput';\nimport { TextField } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register } from '../../redux/auth/authOperations';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { selectIsAuthLoading } from '../../redux/auth/authSelectors';\nimport Loader from '../Loader/Loader';\n\nconst theme = createTheme({\n  components: {\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          '&:hover': {\n            backgroundColor: 'rgba(190, 219, 176, 1)',\n            color: 'rgba(22, 22, 22, 1)',\n          },\n        },\n      },\n    },\n    MuiInputLabel: {\n      styleOverrides: {\n        root: {\n          '&.Mui-focused': {\n            color: 'rgba(255, 255, 255, 0.3)',\n          },\n          color: 'rgba(255, 255, 255, 0.3)',\n        },\n      },\n    },\n    MuiOutlinedInput: {\n      styleOverrides: {\n        notchedOutline: {\n          borderColor: 'rgba(255, 255, 255, 0.3)',\n        },\n        root: {\n          [`&:hover .${outlinedInputClasses.notchedOutline}`]: {\n            borderColor: 'rgba(255, 255, 255, 0.3)',\n          },\n          [`&.Mui-focused .${outlinedInputClasses.notchedOutline}`]: {\n            borderColor: 'rgba(255, 255, 255, 0.3)',\n          },\n          color: '#fff',\n          fontFamily: 'Poppins',\n          fontSize: '14px',\n          fontWeight: '400',\n        },\n      },\n    },\n  },\n});\nfunction RegisterForm() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const authOperation = useSelector(selectIsAuthLoading);\n\n  const [showPassword, setShowPassword] = React.useState(false);\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    try {\n      await dispatch(\n        register({\n          name: form.elements.name.value,\n          email: form.elements.email.value,\n          password: form.elements.password.value,\n        })\n      ).unwrap();\n      form.reset();\n      Notify.success('Congratulations, you have successfully registered!');\n      navigate('/auth/login');\n    } catch (error) {\n      Notify.failure('User already exist');\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <section className={css.loginSection}>\n        <Box\n          sx={{\n            mt: 1,\n            background: 'rgba(21, 21, 21, 1)',\n            borderRadius: '8px',\n            padding: '40px',\n            '@media (max-width: 375px)': {\n              padding: '24px 5px',\n            },\n          }}\n        >\n          <Link className={css.registerLink} to=\"/register\" underline=\"none\">\n            Registration\n          </Link>\n          <Link className={css.loginLink} to=\"/auth/login\" underline=\"none\">\n            Log In\n          </Link>\n\n          <Box\n            onSubmit={handleSubmit}\n            component=\"form\"\n            noValidate\n            autoComplete=\"off\"\n            sx={{\n              mt: 1,\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '20px',\n              marginTop: '25px',\n            }}\n          >\n            <TextField\n              name=\"name\"\n              required\n              id=\"name\"\n              label=\"Enter your name\"\n              variant=\"outlined\"\n              autoFocus\n            />\n            <TextField\n              required\n              id=\"email\"\n              label=\"Enter your email\"\n              name=\"email\"\n              variant=\"outlined\"\n            />\n            <Box>\n              <FormControl sx={{ width: '345px' }} variant=\"outlined\">\n                <InputLabel htmlFor=\"password\" required>\n                  Create a password\n                </InputLabel>\n                <OutlinedInput\n                  name=\"password\"\n                  id=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        sx={{ color: 'rgba(255, 255, 255, 0.3)' }}\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        onMouseDown={handleMouseDownPassword}\n                        edge=\"end\"\n                      >\n                        {showPassword ? <VisibilityOff /> : <Visibility />}\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                  label=\"Create a password*\"\n                  required\n                />\n              </FormControl>\n            </Box>\n            <Button\n              className={css.btnRegister}\n              variant=\"text\"\n              type=\"submit\"\n              sx={{\n                mb: 1,\n                background: 'rgba(190, 219, 176, 1)',\n                color: 'rgba(22, 22, 22, 1)',\n                fontFamily: 'Poppins',\n                textTransform: 'unset',\n                width: '344px',\n                height: '49px',\n                marginTop: '20px',\n              }}\n            >\n              {authOperation === 'register' ? <Loader /> : <>Register Now</>}\n            </Button>\n          </Box>\n        </Box>\n      </section>\n    </ThemeProvider>\n  );\n}\n\nexport default RegisterForm;\n"],"names":["theme","createTheme","components","MuiButton","styleOverrides","root","backgroundColor","color","MuiInputLabel","MuiOutlinedInput","notchedOutline","borderColor","concat","outlinedInputClasses","fontFamily","fontSize","fontWeight","dispatch","useDispatch","navigate","useNavigate","authOperation","useSelector","selectIsAuthLoading","showPassword","setShowPassword","React","_jsx","ThemeProvider","children","className","css","loginSection","_jsxs","Box","sx","mt","background","borderRadius","padding","Link","registerLink","to","underline","loginLink","onSubmit","async","event","preventDefault","form","currentTarget","register","name","elements","value","email","password","unwrap","reset","Notify","success","error","failure","component","noValidate","autoComplete","display","flexDirection","gap","marginTop","TextField","required","id","label","variant","autoFocus","FormControl","width","InputLabel","htmlFor","OutlinedInput","type","endAdornment","InputAdornment","position","IconButton","onClick","handleClickShowPassword","show","onMouseDown","edge","VisibilityOff","Visibility","Button","btnRegister","mb","textTransform","height","Loader","_Fragment"],"sourceRoot":""}