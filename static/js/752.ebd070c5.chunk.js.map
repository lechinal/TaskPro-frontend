{"version":3,"file":"static/js/752.ebd070c5.chunk.js","mappings":"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","sources":["webpack://task-pro/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginSection\":\"LoginForm_loginSection__7vrrH\",\"registerLink\":\"LoginForm_registerLink__ZjN9K\",\"loginLink\":\"LoginForm_loginLink__5M3-r\"};","import React from 'react';\nimport { Box, Button } from '@mui/material';\nimport css from './LoginForm.module.css';\nimport { Link } from 'react-router-dom';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport IconButton from '@mui/material/IconButton';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { outlinedInputClasses } from '@mui/material/OutlinedInput';\nimport { TextField } from '@mui/material';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../../redux/auth/authOperations';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { selectIsAuthLoading } from '../../redux/auth/authSelectors';\nimport Loader from '../Loader/Loader';\nconst theme = createTheme({\n  components: {\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          '&:hover': {\n            backgroundColor: 'rgba(190, 219, 176, 1)',\n            color: 'rgba(22, 22, 22, 1)',\n          },\n        },\n      },\n    },\n    MuiInputLabel: {\n      styleOverrides: {\n        root: {\n          '&.Mui-focused': {\n            color: 'rgba(255, 255, 255, 0.3)',\n          },\n          color: 'rgba(255, 255, 255, 0.3)',\n        },\n      },\n    },\n    MuiOutlinedInput: {\n      styleOverrides: {\n        notchedOutline: {\n          borderColor: 'rgba(255, 255, 255, 0.3)',\n        },\n        root: {\n          [`&:hover .${outlinedInputClasses.notchedOutline}`]: {\n            borderColor: 'rgba(255, 255, 255, 0.3)',\n          },\n          [`&.Mui-focused .${outlinedInputClasses.notchedOutline}`]: {\n            borderColor: 'rgba(255, 255, 255, 0.3)',\n          },\n          color: '#fff',\n          fontFamily: 'Poppins',\n          fontSize: '14px',\n          fontWeight: '400',\n        },\n      },\n    },\n  },\n});\n\nfunction LoginForm() {\n  const dispatch = useDispatch();\n\n  const authOperation = useSelector(selectIsAuthLoading);\n  const [showPassword, setShowPassword] = React.useState(false);\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    try {\n      await dispatch(\n        login({\n          email: form.elements.email.value,\n          password: form.elements.password.value,\n        })\n      ).unwrap();\n      Notify.success(`Welcome, ${form.elements.email.value}!`);\n      form.reset();\n    } catch (error) {\n      Notify.failure('Login failed. Please enter correct data!');\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <section className={css.loginSection}>\n        <Box\n          sx={{\n            mt: 1,\n            background: 'rgba(21, 21, 21, 1)',\n            borderRadius: '8px',\n            padding: '40px',\n            '@media (max-width: 375px)': {\n              padding: '24px 5px',\n            },\n          }}\n        >\n          <Link\n            className={css.registerLink}\n            to=\"/auth/register\"\n            underline=\"none\"\n          >\n            Registration\n          </Link>\n          <Link className={css.loginLink} to=\"/login\" underline=\"none\">\n            Log In\n          </Link>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            noValidate\n            sx={{\n              mt: 1,\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '20px',\n              marginTop: '30px',\n            }}\n          >\n            <TextField\n              required\n              id=\"email\"\n              label=\"Email\"\n              name=\"email\"\n              variant=\"outlined\"\n            />\n              <Box>\n            <FormControl sx={{width: \"345px\"}} variant=\"outlined\">\n              <InputLabel htmlFor=\"password\" required>\n                Confirm a password\n              </InputLabel>\n              <OutlinedInput\n                 name=\"password\"\n                 id=\"password\"\n                type={showPassword ? 'text' : 'password'}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton sx={{color: \"rgba(255, 255, 255, 0.3)\"}}\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                      edge=\"end\"\n                    >\n                      {showPassword ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                label=\"Confirm a password\"\n                required              />\n            </FormControl>\n            </Box>\n            <Button\n              className={css.btnRegister}\n              variant=\"text\"\n              type=\"submit\"\n              sx={{\n                mb: 1,\n                background: 'rgba(190, 219, 176, 1)',\n                color: 'rgba(22, 22, 22, 1)',\n                fontFamily: 'Poppins',\n                textTransform: 'unset',\n                width: '344px',\n                height: '49px',\n                marginTop: '20px',\n              }}\n            >\n              {authOperation === 'login' ? <Loader /> : <>Log In Now</>}\n            </Button>\n          </Box>\n        </Box>\n      </section>\n    </ThemeProvider>\n  );\n}\n\nexport default LoginForm;\n"],"names":["theme","createTheme","components","MuiButton","styleOverrides","root","backgroundColor","color","MuiInputLabel","MuiOutlinedInput","notchedOutline","borderColor","concat","outlinedInputClasses","fontFamily","fontSize","fontWeight","dispatch","useDispatch","authOperation","useSelector","selectIsAuthLoading","showPassword","setShowPassword","React","_jsx","ThemeProvider","children","className","css","loginSection","_jsxs","Box","sx","mt","background","borderRadius","padding","Link","registerLink","to","underline","loginLink","component","onSubmit","async","event","preventDefault","form","currentTarget","login","email","elements","value","password","unwrap","Notify","success","reset","error","failure","noValidate","display","flexDirection","gap","marginTop","TextField","required","id","label","name","variant","FormControl","width","InputLabel","htmlFor","OutlinedInput","type","endAdornment","InputAdornment","position","IconButton","onClick","handleClickShowPassword","show","onMouseDown","edge","VisibilityOff","Visibility","Button","btnRegister","mb","textTransform","height","Loader","_Fragment"],"sourceRoot":""}